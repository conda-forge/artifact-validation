name: scan

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch: null

jobs:
  scan:
    name: scan
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: configure ci and install code
        shell: bash -l {0}
        run: |
          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          conda install --quiet --file requirements.txt
          python -m pip install -e .

      - name: clone libcfgraph
        shell: bash -l {0}
        run: |
          git clone --depth=1 https://github.com/regro/libcfgraph.git

      - name: scan
        shell: bash -l {0}
        run: |
          conda-forge-scan-artifacts \
            -v \
            --pull \
            --libcfgraph-path=libcfgraph \
            --time-limit=2700 \
            --restart-data=scan_data/restart.json \
            --output-path=scan_data/invalid_packages.yaml

      - name: push
        shell: bash -l {0}
        run: |
          git add scan_data/.
          git commit -m "[ci skip] scan data for https://github.com/conda-forge/artifact-validation/actions/runs/${RUN_ID}"
          for _ in `seq 0 1`; do
            git pull
            git push
          done
        env:
          RUN_ID: ${{ github.run_id }}
